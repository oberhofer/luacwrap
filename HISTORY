0.1.0

* first public version
* added luacwrap_pushtypedptr() function to push typed pointers 
  to (non garbage collected) objects on the lua stack
* added helper functions to add unsigned constants to a lua table
  (for wrapping enums)

1.0.0

* added support for initialization via set() and new()
* added function luacwrap_pushboxedobj() to add boxed structure wrappers
* added set() of arrays via string
* added LuaRocks support
* improved reference types to be able to control their lifetime
* fixed copying of pointer references (environment table)
* fixed initialization of instances created via new(from)
* fixed creation of destination directory for lua module link (linux makefile)
* fixed tostring conversion of array/buffer

1.0.1-1

* published via moonrocks server

1.0.2-1

* made folder structure compatible with luarocks under win32

1.0.3-1

* fixed Makefile.win to create bin/lib directories
* swiched back to make because luarocks builtin does not support 
  custom .def files

1.0.4-1

* added getmoduletable() function
* improved checks in luacwrap_getdescriptor() function
* fixed bug in Embedded_getouter() which caused problems with 
  wrapped objects as parameters with parameter index > 1
* added checks if luacwrap_getdescriptor() fails
* replaced calls to obsolete string.gfind by string.gmatch
* fixed wrapping of already wrapped objects via attach()

1.1.0-1

* Removed C interface from DLL exports and export it via a C interface struct.
  This enables dependant C modules to load luacwrap dynamically via the 
  Lua loader.
* moved rockspeck from make based to builtin based build
* bugfix: remove a referenced value if nil or a number is assigned to 
  a wrapped pointer

1.2.0-1

* support Lua 5.2
* document C interface

1.3.0-1

* API change: removed lib param from LUACWRAP_DEFINESTRUCT and LUACWRAP_DEFINEARRAY macro
* added support for platform dependant basic types (INT, UINT, LONG, ULONG)

1.3.1-1

* etc/mkvs.bat now works with different Lua versions (5.1 - 5.3)
* fixed implementation of parts of the Lua interface (createbuffer, 
  registerarray and registerstruct function)
* better documentation for the Lua API
